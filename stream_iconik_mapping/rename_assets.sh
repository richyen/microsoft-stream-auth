#!/bin/bash

# This script renames the title of an asset by stripping out the UUID-prefix from the asset title
# This script was necessary because in the MS Stream export, we prefixed all files with their MS Stream UUID, to prevent naming collisions

# read asset IDs from collection info file, generated by get_collection_assets.sh
collection_info=${1}
asset_ids=`cat ${collection_info} | jq '.objects[] | .id' | sed 's/"//g'`

for asset in ${asset_ids}; do
  old_title=`cat ${collection_info} | jq ".objects[] | select(.id==\"${asset}\").title"`
  old_title_no_quotes=`echo ${old_title} | sed 's/"//g'`
  title_no_uuid=`echo ${old_title} | cut -f 6- -d"-" | cut -f1 -d'"'`
  title_no_trailing=`echo ${title_no_uuid} | sed "s/-.mp4/.mp4/"`
  new_title=`echo ${title_no_trailing} | sed "s/-/_/g"`

  # Skip csv files (metadata files created during the export to assist with mapping)
  if [[ ${old_title} == '"channel_metadata.csv"' ]]; then
    continue
  fi

  # If resulting title is empty, make a note of it and skip
  if [[ ${new_title} == '' ]]; then
    echo "############## Failed to rename ${asset}"
    new_title=$old_title_no_quotes
  fi

  if [[ ${new_title} == ' ' ]]; then
    echo "============== Failed to rename ${asset}"
    new_title=$old_title_no_quotes
  fi

  # Do the rename
  echo "Renaming ${asset} from '${old_title}' to '${new_title}'"
  curl -sX PUT "https://app.iconik.io/API/assets/v1/assets/${asset}/" -H "accept: application/json" -H "App-ID: ${ICONIK_APP_ID}" -H "Auth-Token: ${ICONIK_AUTH_TOKEN}" -H "Content-Type: application/json" -d "{ \"title\": \"${new_title}\"}"
done

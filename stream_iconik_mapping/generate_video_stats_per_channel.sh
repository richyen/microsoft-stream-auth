#!/bin/bash

# This script will read MS Stream channel data to get the following information:
# - Iconik Asset UUID
# - Channel/Collection UUID
# - Video title
# - Uploader email address
# - Play count
# - Create date
# Output format is CSV
# The following information needs to be manually added to the CSV:
# - Speaker
# - Bible references
# - Message Series Name
# - Teacher/Speaker Name
# - Teaching type

# Expected input: Iconik Channel UUID (Collection ID)
# This script will fetch Collection information generated by get_collection_assets.sh
# as well as Channel information generated during the MS Stream export
iconik_channel_id=${1}
mstream_channel_id=`cat collections.csv | grep ${iconik_channel_id} | cut -f2 -d','`
echo "Found MS Stream Channel ${mstream_channel_id} from Iconik Collection ${iconik_channel_id}"

# Extract MS Stream Video UUID
video_info=`cat collections_info/${iconik_channel_id}.json | jq -r ".objects[] | [.id,.file_names[0]] | @csv"`
for v in ${video_info}; do
  if [[ `echo ${v} | cut -f2 -d',' | sed 's/"//g'` == "channel_metadata.csv" ]]; then
    continue
  fi
  asset_id=`echo ${v} | cut -f1 -d ',' | sed 's/"//g'`
  mstream_uuid=`echo ${v} | cut -f2 -d',' | cut -f 1-5 -d'-' | sed 's/"//g'`
  UUID_REGEX='^\w{8}-\w{4}-\w{4}-\w{4}-\w{12}$'
  if [[ ! ${mstream_uuid} =~ ${UUID_REGEX} ]]; then
    echo "Error extracting MS Stream UUID for ${v}"
    continue
  fi
  echo "Processing MS Stream UUID ${mstream_uuid} (Iconik Asset ID ${asset_id}) Channel ${mstream_channel_id}"
  video_metadata=`cat ../output/channels/${mstream_channel_id}.json | jq -r ".[] | select(.id==\"${mstream_uuid}\") | [.id,.name,.creator.mail,.metrics.views,.created] | @csv"`
  echo "${asset_id},${iconik_channel_id},${video_metadata}" >> generated_video_stats.csv
done
